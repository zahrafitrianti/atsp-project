*************************************************************************
**   AndroBugs Framework - Android App Security Vulnerability Scanner  **
**                            version: 1.0.0                           **
**     author: Yu-Cheng Lin (@AndroBugs, http://www.AndroBugs.com)     **
**               contact: androbugs.framework@gmail.com                **
*************************************************************************
Platform: Android
Package Name: com.parental.control.v4
Package Version Name: 2.0
Package Version Code: 2
Min Sdk: 8
Target Sdk: 14
MD5   : 52a30b58257d338617a39643e2216d0c
SHA1  : 8c5ef693ae781cdcf1a5710be7f98a7eb0052248
SHA256: 0b8ba0c6cebe5695639bf1b282b52f126dba733f3c204e37615a3ba5f7dd6fe8
SHA512: d50fc231192434e29f3351c87d47c5bf6dd6d49d19f8796211b618e0f030728e04d9e30cf864dc6268a83a13a4db921330abd38dd5857017ce5176655775bd1a
Analyze Signature: 0d0b02330006ffb5e96a9bbda2c78f81e9feadd428ae7e987781b7f1565361e636a5d9dc7ae97ad44dc140ac0c5e07da04423d1729f2d3c002a47e4cb238cb52
------------------------------------------------------------------------------------------------
[Warning]  External Storage Accessing:
           External storage access found (Remember DO NOT write important files to external storages):
               => Lo/Ë;->run()V (0x2354) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0xb4) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0x152) --->
                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;
[Warning]  Codes for Sending SMS:
           This app has code for sending SMS messages (sendDataMessage, sendMultipartTextMessage or sendTextMessage):
               => Lo/Ë$cOn;->ï½¥()Ljava/lang/String; (0x2a) ---> Landroid/telephony/SmsManager;->sendTextMessage(Ljava/lang/String;
                    Ljava/lang/String; Ljava/lang/String; Landroid/app/PendingIntent; Landroid/app/PendingIntent;)V
[Notice]  AndroidManifest Adb Backup Checking:
           ADB Backup is ENABLED for this app (default: ENABLED). ADB Backup is a good tool for backing up all of your files. If it's open
           for this app, people who have your phone can copy all of the sensitive data for this app in your phone (Prerequisite: 1.Unlock
           phone's screen 2.Open the developer mode). The sensitive data may include lifetime access token, username or password, etc.
           Security case related to ADB Backup:
           1.http://www.securityfocus.com/archive/1/530288/30/0/threaded
           2.http://blog.c22.cc/advisories/cve-2013-5112-evernote-android-insecure-storage-of-pin-data-bypass-of-pin-protection/
           3.http://nelenkov.blogspot.co.uk/2012/06/unpacking-android-backups.html
           Reference: http://developer.android.com/guide/topics/manifest/application-element.html#allowbackup
[Notice]  File Unsafe Delete Checking:
           Everything you delete may be recovered by any user or attacker, especially rooted devices.
           Please make sure do not use "file.delete()" to delete essential files.
           Check this video: https://www.youtube.com/watch?v=tGw1fxUD-uY
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0xae) ---> Ljava/io/File;->delete()Z
[Notice]  HttpURLConnection Android Bug Checking:
           You're using "HttpURLConnection". Prior to Android 2.2 (Froyo), "HttpURLConnection" had some frustrating bugs.
           In particular, calling close() on a readable InputStream could poison the connection pool. Work around this by disabling
           connection pooling.
           Please check the reference:
            (1)http://developer.android.com/reference/java/net/HttpURLConnection.html
            (2)http://android-developers.blogspot.tw/2011/09/androids-http-clients.html
               => Lo/Ë$auX;->ï½¥()Ljava/lang/String; (0x22) ---> Ljava/net/HttpURLConnection;->setConnectTimeout(I)V
               => Lo/Ë$auX;->ï½¥()Ljava/lang/String; (0x28) ---> Ljava/net/HttpURLConnection;->connect()V
               => Lo/Ë$auX;->ï½¥()Ljava/lang/String; (0x2e) ---> Ljava/net/HttpURLConnection;->getResponseCode()I
               => Lo/Ë$if;->ï½¥()Ljava/lang/String; (0x136) ---> Ljava/net/HttpURLConnection;->setDoInput(Z)V
               => Lo/Ë$if;->ï½¥()Ljava/lang/String; (0x13e) ---> Ljava/net/HttpURLConnection;->setDoOutput(Z)V
               => Lo/Ë$if;->ï½¥()Ljava/lang/String; (0x146) ---> Ljava/net/HttpURLConnection;->setUseCaches(Z)V
               => Lo/Ë$if;->ï½¥()Ljava/lang/String; (0x150) ---> Ljava/net/HttpURLConnection;->setRequestMethod(Ljava/lang/String;)V
               => Lo/Ë$if;->ï½¥()Ljava/lang/String; (0x15e) ---> Ljava/net/HttpURLConnection;->setRequestProperty(Ljava/lang/String;
                    Ljava/lang/String;)V
               => Lo/Ë$if;->ï½¥()Ljava/lang/String; (0x186) ---> Ljava/net/HttpURLConnection;->setRequestProperty(Ljava/lang/String;
                    Ljava/lang/String;)V
               => Lo/Ë$if;->ï½¥()Ljava/lang/String; (0x190) ---> Ljava/net/HttpURLConnection;->getOutputStream()Ljava/io/OutputStream;
               => Lo/Ë$if;->ï½¥()Ljava/lang/String; (0x29c) ---> Ljava/net/HttpURLConnection;->getResponseCode()I
               => Lo/Ë$if;->ï½¥()Ljava/lang/String; (0x2a2) ---> Ljava/net/HttpURLConnection;->getResponseMessage()Ljava/lang/String;
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0x32c) ---> Ljava/net/HttpURLConnection;->setDoInput(Z)V
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0x334) ---> Ljava/net/HttpURLConnection;->setDoOutput(Z)V
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0x33c) ---> Ljava/net/HttpURLConnection;->setUseCaches(Z)V
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0x346) ---> Ljava/net/HttpURLConnection;->setRequestMethod(Ljava/lang/String;)V
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0x354) ---> Ljava/net/HttpURLConnection;->setRequestProperty(Ljava/lang/String;
                    Ljava/lang/String;)V
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0x37c) ---> Ljava/net/HttpURLConnection;->setRequestProperty(Ljava/lang/String;
                    Ljava/lang/String;)V
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0x386) --->
                    Ljava/net/HttpURLConnection;->getOutputStream()Ljava/io/OutputStream;
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0x4b8) ---> Ljava/net/HttpURLConnection;->getResponseCode()I
               => Lo/Ë$Ë;->ï½¥()Ljava/lang/String; (0x4be) --->
                    Ljava/net/HttpURLConnection;->getResponseMessage()Ljava/lang/String;
[Info] <Command> Runtime Command Checking:
           This app is not using critical function 'Runtime.getRuntime().exec("...")'.
[Info] <Command> Executing "root" or System Privilege Checking:
           Did not find codes checking "root" permission(su) or getting system permission (It's still possible we did not find out).
[Info] <Database> SQLiteDatabase Transaction Deprecated Checking:
           Ignore checking "SQLiteDatabase:beginTransactionNonExclusive" you're not using it.
[Info] <Database> Android SQLite Databases Encryption (SQLite Encryption Extension (SEE)):
           This app is "NOT" using SQLite Encryption Extension (SEE) on Android (http://www.sqlite.org/android) to encrypt or decrpyt
           databases.
[Info] <Database> Android SQLite Databases Encryption (SQLCipher):
           This app is "NOT" using SQLCipher(http://sqlcipher.net/) to encrypt or decrpyt databases.
[Info] <Database><#CVE-2011-3901#> Android SQLite Databases Vulnerability Checking:
           This app is "NOT" using Android SQLite databases.
[Info] <Debug> Android Debug Mode Checking:
           DEBUG mode is OFF(android:debuggable="false") in AndroidManifest.xml.
[Info]  Dynamic Code Loading:
           No dynamic code loading(DexClassLoader) found.
[Info] <#BID 64208, CVE-2013-6271#> Fragment Vulnerability Checking:
           Did not detect the vulnerability of "Fragment" dynamically loading into "PreferenceActivity" or "SherlockPreferenceActivity"
[Info] <Framework> Framework - MonoDroid:
           This app is NOT using MonoDroid Framework (http://xamarin.com/android).
[Info] <Hacker> Base64 String Encryption:
           No encoded Base64 String or Urls found.
[Info] <Database><Hacker> Key for Android SQLite Databases Encryption:
           Did not find using the symmetric key(PRAGMA key) to encrypt the SQLite databases (It's still possible that it might use but we
           did not find out).
[Info] <Debug><Hacker> Codes for Checking Android Debug Mode:
           Did not detect codes for checking "ApplicationInfo.FLAG_DEBUGGABLE" in AndroidManifest.xml.
[Info] <Hacker> APK Installing Source Checking:
           Did not detect this app checks for APK installer sources.
[Info] <KeyStore><Hacker> KeyStore File Location:
           Did not find any possible BKS keystores or certificate keystore file (Notice: It does not mean this app does not use keysotre):
[Info] <KeyStore><Hacker> KeyStore Protection Checking:
           Ignore checking KeyStore protected by password or not because you're not using KeyStore.
[Info] <Hacker> Code Setting Preventing Screenshot Capturing:
           Did not detect this app has code setting preventing screenshot capturing.
[Info] <Signature><Hacker> Getting Signature Code Checking:
           Did not detect this app is checking the signature in the code.
[Info] <KeyStore> KeyStore Type Checking:
           KeyStore 'BKS' type check OK
[Info]  Google Cloud Messaging Suggestion:
           Nothing to suggest.
[Info] <#CVE-2013-4787#> Master Key Type I Vulnerability:
           No Master Key Type I Vulnerability in this APK.
[Info]  App Sandbox Permission Checking:
           No security issues "MODE_WORLD_READABLE" or "MODE_WORLD_WRITEABLE" found on 'openOrCreateDatabase' or 'openOrCreateDatabase2' or
           'getDir' or 'getSharedPreferences' or 'openFileOutput'
[Info]  Native Library Loading Checking:
           No native library loaded.
[Info]  AndroidManifest Dangerous ProtectionLevel of Permission Checking:
           No "dangerous" protection level customized permission found (AndroidManifest.xml).
[Info]  AndroidManifest Exported Components Checking:
           No exported components(except for Launcher) for receiving Android or outside applications' actions (AndroidManifest.xml).
[Info]  AndroidManifest PermissionGroup Checking:
           PermissionGroup in permission tag of AndroidManifest sets correctly.
[Info] <Implicit_Intent> Implicit Service Checking:
           No dangerous implicit service.
[Info]  AndroidManifest "intent-filter" Settings Checking:
           "intent-filter" of AndroidManifest.xml check OK.
[Info]  AndroidManifest Normal ProtectionLevel of Permission Checking:
           No default or "normal" protection level customized permission found (AndroidManifest.xml).
[Info] <#CVE-2013-6272#> AndroidManifest Exported Lost Prefix Checking:
           No exported components that forgot to add "android:" prefix.
[Info]  AndroidManifest ContentProvider Exported Checking:
           No exported "ContentProvider" found (AndroidManifest.xml).
[Info] <Sensitive_Information> Getting IMEI and Device ID:
           Did not detect this app is getting the "device id(IMEI)" by "TelephonyManager.getDeviceId()" approach.
[Info] <Sensitive_Information> Getting ANDROID_ID:
           Did not detect this app is getting the 64-bit number "Settings.Secure.ANDROID_ID".
[Info] <System> AndroidManifest sharedUserId Checking:
           This app does not use "android.uid.system" sharedUserId.
[Info] <SSL_Security> SSL Implementation Checking (Verifying Host Name in Custom Classes):
           Self-defined HOSTNAME VERIFIER checking OK.
[Info] <SSL_Security> SSL Implementation Checking (Verifying Host Name in Fields):
           Critical vulnerability "ALLOW_ALL_HOSTNAME_VERIFIER" field setting or "AllowAllHostnameVerifier" class instance not found.
[Info] <SSL_Security> SSL Implementation Checking (Insecure component):
           Did not detect SSLSocketFactory by insecure method "getInsecure".
[Info] <SSL_Security> SSL Implementation Checking (HttpHost):
           DEFAULT_SCHEME_NAME for HttpHost check: OK
[Info] <SSL_Security> SSL Connection Checking:
           Did not discover urls that are not under SSL (Notice: if you encrypt the url string, we can not discover that).
[Info] <SSL_Security> SSL Implementation Checking (WebViewClient for WebView):
           Did not detect critical usage of "WebViewClient"(MITM Vulnerability).
[Info] <SSL_Security> SSL Certificate Verification Checking:
           Did not find vulnerable X509Certificate code.
[Info]  Unnecessary Permission Checking:
           Permission 'android.permission.ACCESS_MOCK_LOCATION' sets correctly.
[Info]  Accessing the Internet Checking:
           This app is using the Internet via HTTP protocol.
[Info]  AndroidManifest System Use Permission Checking:
           No system-level critical use-permission found.
[Info] <WebView> WebView Local File Access Attacks Checking:
           Did not find potentially critical local file access settings.
[Info] <WebView> WebView Potential XSS Attacks Checking:
           Did not detect "setJavaScriptEnabled(true)" in WebView.
[Info] <WebView><Remote Code Execution><#CVE-2013-4710#> WebView RCE Vulnerability Checking:
           WebView addJavascriptInterface vulnerabilities not found.
------------------------------------------------------------
AndroBugs analyzing time: 0.236796 secs
Total elapsed time: 0.795622 secs
